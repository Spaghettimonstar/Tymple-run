**"mySketch"**
//variables
let TheHalls
let TheSpikes
let thePlayer
//lets playerTyped variable
let playerTyped

function setup() {
	createCanvas(windowWidth, windowHeight);
	background(100);
	
//calls the halls class and plays it
 TheHalls = new hall(); 
		
	
	//calls the player class and plays it
 thePlayer = new player();
isalive = true
	thePlayer.alive()
	  // thePlayer.alive()
	//calls the trap class and plays it
	TheSpikes = new Spikes();
	//playerTyped variable is the new typed class, or takes it over
	playerTyped = new typed()
	
	//Spikes
spikes = ['spikes', 'points', 'sharp', 'iron', 'spines']
spikeTrap = spikes[Math.floor(Math.random()*spikes.length)];
console.log("spike word is " + spikeTrap)
//Pitfall
 pit = ['hole', 'pothole', 'pitfall', 'abyss', 'drop', 'missing', 'trip']
 pitTrap = pit[Math.floor(Math.random()*pit.length)];
console.log("pit word is " + pitTrap)
//Boulder
 boulder = ['boulder', 'rock', 'big', 'stone', 'bedrock', 'rock debris', 'rolling']
 boulderTrap = boulder[Math.floor(Math.random()*boulder.length)];
console.log("boulder word is " + boulderTrap)
//Arrows
 arrows = ['arrow', 'flying', 'feather', 'stick', 'dart', 'bolt']
 arrowTrap = arrows[Math.floor(Math.random()*arrows.length)];
console.log(" arrow word is " + arrowTrap)
//Tripwire
 tripwire = ['tripwire', 'string', 'trap', 'hazard', 'surprise', 'unexpected']
 tripwireTrap = tripwire[Math.floor(Math.random()*tripwire.length)];
console.log("tripwire word is " + tripwireTrap)
//Snakes
 snakes = ['snakes', 'slithering', 'serpents', 'strike', 'hungry','writhing', 'venomous']
 snakeTrap = snakes[Math.floor(Math.random()*snakes.length)];
console.log("snakes word is " + snakeTrap)
//Poison
 poison = ['poison', 'gas', 'air', 'toxic', 'opaque', 'breathed']
 poisonTrap = poison[Math.floor(Math.random()*poison.length)];
console.log("poison word is " + poisonTrap)
//Lever/bridge
 lever = ['lever', 'switch', 'interact', 'bridge', 'signal', 'pull']
 leverTrap = lever[Math.floor(Math.random()*lever.length)];
console.log("lever word is " + leverTrap)
//The boss(level)
 boss = ['extravagant', 'improvident', 'focusing', 'handkerchief', 'narcissistic', 'spaghetti', 'island', 'eight', 'golden', 'table', 'lightning', 'seperate']
 bossTrap = boss[Math.floor(Math.random()*boss.length)];
console.log(" boss word is " + bossTrap)


}


**"hitbox"**
class hitbox {
	constructor() {
		// set a position here, have player override it
	this.x = 0
	this.y = 0
	// var collision = get();
	}
}

**"player"**
//player class
class player extends hitbox  {
	constructor (color) {
		super()
		//assigns colors
		var colors = ['red' , 'blue', 'yellow', 'green']
		//randomizes colors
	this.colorRandom = random(colors);
		//prints out the randomized output
	print("color is " + this.colorRandom)
		
		this.x = windowWidth / 6
		this.y = windowHeight / 3
		print("player x is " + this.x, "player y is " + this.y)
	}
	alive() {
		 if (isalive) {
		print(" is alive " + isalive)
		 }
		else {
			print("player dead ")
		}
	}
		draw() {
			//Fills the rectange(next line)
			fill(this.colorRandom)
		//draws rectangle at windowWidth divided by 6, windowHeight divided y 3, and with a width of 150, and height of 300
		rect(this.x, this.y, 150, 300);
			
		}

		
	
}
**"spikes"**
class Spikes extends hitbox {
	constructor() {
	super()
		this.x = windowWidth / 1.43
		this.y = windowHeight / 1.46
		this.x2 = windowWidth / 1.28
		this.y2 = windowHeight / 1.46
		this.x3 = windowWidth / 1.35
		this.y3 = windowHeight / 1.6
		print("trap x is " + this.x, "trap y is " + this.y, "trap x2 is " + this.x2, "trap y2 is " + this.y2, "trap x3 is " + this.x3, "trap y3 is " + this.y3)
	}
	// move trap along the screen towards the player
	moving() {
		this.x--
		this.x2--
		this.x3--
		
	}
	//make trap kill upon walking into it
	
	draw() {
		fill('gray')
		triangle(this.x,this.y, this.x2, this.y2, this.x3,this.y3)
		
	}
}

**"hall"**
class hall {
constructor (hallcolor) {
	//assigns colors
		var hallcolors = ['rgb(150,153,87)']
	fill(hallcolors)
	
	rect(windowWidth / 600, windowHeight / 400, windowWidth, windowHeight)
	
	//draw the lines to make the brick look
	
	
}
	
	
	
}

**"draw"**
function draw() {
	clear()
	TheHalls.draw()
	TheSpikes.draw()
	TheSpikes.moving()
	thePlayer.draw()
	//calls playerTyped[or typed class]'s draw function
	playerTyped.draw()
// 
}

**"typed"**
class typed {
	constructor () {
		//empty variable
		this.keys = ''
		this.x = windowWidth / 10
		this.y = windowHeight / 20
	}
	//draw function that draws whats in it
	draw() {
		textSize(30);
		text('You typed  ' + this.keys, this.x, this.y)
	}

}


**"keyPressed"**
function keyTyped() {
		//if the key pressed = W
		//  used to be code --> if(keyCode == 87) {
			//adds to playerTyped's keys variabe[which is nothing], so its value is 'W'
			// used to be code -->playerTyped.keys  += 'W'
			
		// }
		playerTyped.keys = key
	}
**"SpikeWords"**
//then, try to detect what letters are in that word
//try to detect if what the player types matches up with the letter's placement

**"gameOver"**
//make something to detect if player types the word wrong, send them to the gameOver screen
//to test this out, make the player alive false first to see if it goes to this screen
//make have a restart button that(not really urgent)
//once this is done, make the detecion for what the player types, and if it matches up with the word
//is player gets it wrong, set to game over screen. 
